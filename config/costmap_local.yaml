footprint: [[-0.63, -0.30], [-0.63, 0.30], [0.73,0.30], [0.73, -0.30]] #[[-0.30, -0.63], [-0.30, 0.63], [0.30,0.63], [0.30, -0.63]] # if the robot is not circular
footprint_padding: 0.01

robot_base_frame: wcias_base_footprint #base_link in husky tutorial
update_frequency: 4.0
publish_frequency: 3.0
transform_tolerance: 0.5

width: 10.0
height: 10.0

resolution: 0.05 #0.02 in marrtino tutorial

obstacle_range: 5.5 #2.5 in marrtino tutorial
raytrace_range: 6.0 #3.0 in marrtino tutorial

#layer definitions
static_layer:
  map_topic: /move_base/global_costmap/costmap
  subscribe_to_updates: true
  observation_persistence: 1.0

laser_layer_temp:
  enabled:               true
  voxel_decay:           0.75     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.05   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        5.0    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     true   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources:  laser_left laser_right
  
  laser_left:
    data_type: LaserScan
    topic: /scan_left
    marking: true
    clearing: true
    observation_persistence: 0.0
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: false    #default false, clear the buffer after the layer gets readings from it
    voxel_filter: true           #default off, apply voxel filter to sensor, recommend on
    voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter

  laser_right:
    data_type: LaserScan
    topic: /scan_right
    marking: true
    clearing: true
    observation_persistence: 0.0
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: false    #default false, clear the buffer after the layer gets readings from it
    voxel_filter: true           #default off, apply voxel filter to sensor, recommend on
    voxel_min_points: 0
    
# 2D laser layer to clear the map in the visible area
#obstacle_layer:
#  enabled: true
#  observation_sources: laser_left laser_right

    #  laser_left:
    #data_type: LaserScan
    #topic: /scan_left
    #clearing: true
    #making: true

    #laser_right:
    #data_type: LaserScan
    #topic: /scan_right
    #clearing: true
    #making: true


#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  inflation_radius: 1.0  #0.5 in marrtino tutorial  # max distance from an obstacle at which costs are incurred for planning paths
  #Only in marrtino
  cost_scaling_factor:  10.0  # exponential rate at which the obstacle cost drops off (default: 10)
  observation_persistence: 1.0
  decay_time: 15.0
  
  

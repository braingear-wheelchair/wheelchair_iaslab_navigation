footprint: [[-0.63, -0.30], [-0.63, 0.30], [0.73,0.30], [0.73, -0.30]] #[[-0.30, -0.63], [-0.30, 0.63], [0.30,0.63], [0.30, -0.63]] # if the robot is not circular
footprint_padding: 0.01

robot_base_frame: wcias_base_footprint #base_link in husky tutorial
update_frequency: 4.0
publish_frequency: 3.0
transform_tolerance: 0.5

resolution: 0.05 #0.02 in marrtino tutorial

obstacle_range: 5.5 #2.5 in marrtino tutorial
raytrace_range: 6.0 #3.0 in marrtino tutorial

#layer definitions
static_layer:
  map_topic: map
  subscribe_to_updates: true
  observation_persistence: 1.0

obstacle_layer:
  observation_sources:  laser_left # laser_right
  laser_left:
    data_type: LaserScan
    topic: scan_left
    marking: true
    clearing: true
    observation_persistence: 0.0
    inf_is_valid: true #in husky tutorial 
    expected_update_rate: 10.0
    #Only in marrtino
    #min_obstacle_height: 0.2
    #max_obstacle_height: 0.4

#  laser_right:
#    data_type: LaserScan
#    topic: scan_right
#    marking: true
#    clearing: true
#    observation_persistence: 0.0
#    inf_is_valid: true #in husky tutorial 
#    expected_update_rate: 10.0
    #Only in marrtino
    #min_obstacle_height: 0.2
    #max_obstacle_height: 0.4
    
#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  inflation_radius: 1.0 #0.5 in marrtino tutorial  # max distance from an obstacle at which costs are incurred for planning paths
  #Only in marrtino
  cost_scaling_factor:  10.0  # exponential rate at which the obstacle cost drops off (default: 10)
  observation_persistence: 1.0
  decay_time: 15.0
